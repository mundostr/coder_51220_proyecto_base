<div class="container-fluid">
    <div class="row">
        <header class="bg-success text-white p-3" style="height: 25vh;">
            <h1><b>CODER - Sistema de usuarios</b></h1>
        </header>
    </div>

    <div class="row">
        <div class="col-12 m-3">
            <ul>
                {{#each users}}
                <li>{{this.lastName}}, {{this.firstName}} ({{this.userName}})</li>
                {{/each}}
            </ul>
        </div>
    </div>

    <div class="row">
        <div>
            <input type="text" id="chatBox">
        </div>

        <div>
            <p id="messagesLog"></p>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.6.1/socket.io.js"></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Conectamos al servidor socket.io.
    // const socket = io('ws://localhost:3050');
    const socket = io('ws://coder-proyecto-base.onrender.com:3050')

    let user;
    const chatBox = document.getElementById('chatBox');
    const messagesLog = document.getElementById('messagesLog');
    
    chatBox.addEventListener('keyup', (event) => {
        if (event.key === 'Enter' && chatBox.value.trim().length > 0) {
            socket.emit('new_message', { user: user, msg: chatBox.value });
        }
    });

    socket.on('connect', () => { // Escuchamos el evento connect para detectar cuándo logramos conectar al servidor
        // Escuchamos por el evento server_confirm desde el servidor
        socket.on('server_confirm', (data) => {
            console.log(data);
        });

        socket.on('msg_received', (data) => {
            messagesLog.innerHTML = `${messagesLog.innerHTML}<br>(${data.user}) ${data.msg}`;
        });
    })

    // Sweetalert
    const swalConfig = {
        title: 'Identificación',
        text: 'Indique usuario:',
        input: 'text',
        inputValidator: (val) => {
            return !val && 'Por favor especificar usuario';
        },
        allowOutsideClick: false
    };

    Swal.fire(swalConfig).then((res) => {
        user = res.value;
    });
</script>